{"name":"OSMP","tagline":"Georgian OSMP System Payment for Laravel 5.*","body":"# OSMP\r\n\r\n[![OSMP](http://i.imgsafe.org/34a2e47.jpg)](https://github.com/zgabievi/OSMP)\r\n\r\n[![Latest Stable Version](https://poser.pugx.org/zgabievi/OSMP/version.png)](https://packagist.org/packages/zgabievi/OSMP)\r\n[![Total Downloads](https://poser.pugx.org/zgabievi/OSMP/d/total.png)](https://packagist.org/packages/zgabievi/OSMP)\r\n[![License](https://poser.pugx.org/zgabievi/OSMP/license)](https://packagist.org/packages/zgabievi/OSMP)\r\n\r\nGeorgian OSMP System Payment for [Laravel 5.*](http://laravel.com/)\r\n\r\n## Table of Contents\r\n- [Installation](#installation)\r\n    - [Composer](#composer)\r\n    - [Laravel](#laravel)\r\n- [Usage](#usage)\r\n- [Protocol](#protocol)\r\n- [Codes](#codes)\r\n- [Config](#config)\r\n- [License](#license)\r\n\r\n## Installation\r\n\r\n### Composer\r\n\r\nRun composer command in your terminal.\r\n\r\n    composer require zgabievi/osmp\r\n\r\n### Laravel\r\n\r\nOpen `config/app.php` and find the `providers` key. Add `OSMPServiceProvider` to the array.\r\n\r\n```php\r\nGabievi\\OSMP\\OSMPServiceProvider::class\r\n```\r\n\r\nFind the `aliases` key and add `Facade` to the array. \r\n\r\n```php\r\n'OSMP' => Gabievi\\OSMP\\OSMPFacade::class\r\n```\r\n\r\n## Usage\r\n\r\nCreate route in your `routes.php`\r\n\r\n```php\r\nRoute::get('billing', function () {\r\n\t// LISTENERS\r\n\r\n\treturn OSMP::init();\r\n})->middleware('osmp.auth');\r\n```\r\n\r\nMiddleware is required if you want to make Basic Authentication\r\n\r\nIn place of `// LISTENERS` you can write `osmp` listeners:\r\n\r\n```php\r\nEvent::listen('osmp.*', function (...$args) {\r\n\tif ($args[0] == 'check') {\r\n\t\t// flash session data for check operation\r\n\t\tsession()->flash('osmp.check', [\r\n\t\t\t'fullname' => 'Zura Gabievi',\r\n\t\t\t'account' => '000000'\r\n\t\t]);\r\n\t} else {\r\n\t\t// flash session data for pay operation\r\n\t\tsession()->flash('osmp.pay', [\r\n\t\t\t'fullname' => 'John Doe',\r\n\t\t\t'account' => '000001'\r\n\t\t]);\r\n\t}\r\n});\r\n```\r\n\r\nFlashed session data will be used in XML response as additional information\r\n\r\nYou can call `Response` early to show some kind of error.\r\nFor example:\r\n\r\n```php\r\nreturn OSMP::Response(5);\r\n```\r\n\r\nThis will output:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<response>\r\n\t<result>5</result>\r\n\t<comment>User does not exist</comment>\r\n</response>\r\n```\r\n\r\n## Protocol\r\n\r\nThis is the protocol for provider:\r\n\r\n- `http(s)://yoursite.com/billing/?command=check&account=000000`\r\n- `http(s)://yoursite.com/billing/?command=pay&txn_id=1234567&account=000000&sum=10.45`\r\n\r\nCommand: check/pay are required\r\n\r\n## Codes\r\n\r\n| Key | Description                        |\r\n|-----|------------------------------------|\r\n| 0   | Operation was successful           |\r\n| 1   | Server Timeout                     |\r\n| 4   | Wrong format of the user's account |\r\n| 5   | User does not exist                |\r\n| 7   | Payments are prohibited            |\r\n| 215 | Transaction duplication            |\r\n| 275 | Wrong amount                       |\r\n| 300 | Fatal Error                        |\r\n\r\n## Config\r\n\r\nPublish OSMP config file using command:\r\n\r\n```\r\nphp artisan vendor:publish\r\n```\r\n\r\nCreated file `config\\osmp.php`. Inside you can change configuration as you wish.\r\n\r\n## License\r\n\r\nOSMP is an open-sourced laravel package licensed under the MIT license\r\n\r\n## TODO\r\n- [ ] Create tests\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}